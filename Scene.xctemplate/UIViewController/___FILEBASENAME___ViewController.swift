//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ___VARIABLE_sceneName___DisplayInterface: class {
    func display___VARIABLE_resourceName___(viewModel: ___VARIABLE_sceneName___Models.Fetch___VARIABLE_resourceName___.ViewModel)
}

class ___VARIABLE_sceneName___ViewController: UIViewController {
    
    // MARK: - Properties
    
    var interactor: ___VARIABLE_sceneName___InteractorInterface?
    var router: (___VARIABLE_sceneName___RouterInterface & ___VARIABLE_sceneName___DataPassing)?
    
    // MARK: - Init

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setupVIPCycle()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setupVIPCycle()
    }
    
    // MARK: - Lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
        setupAccessibilityIdentifers()
        
        performRequest()
    }
    
    // MARK: - Setup
    
    private func setupVIPCycle() {
        let viewController = self
        let interactor = ___VARIABLE_sceneName___Interactor()
        let presenter = ___VARIABLE_sceneName___Presenter()
        let router = ___VARIABLE_sceneName___Router()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    private func setupUI() {
        
    }
    
    private func setupAccessibilityIdentifers() {
    
    }
    
    // MARK: - Helpers
    
    func performRequest() {
        let request = ___VARIABLE_sceneName___Models.Fetch___VARIABLE_resourceName___.Request()
        interactor?.fetch___VARIABLE_resourceName___(request: request)
    }
}


// MARK: - ___VARIABLE_sceneName___DisplayLogic

extension ___VARIABLE_sceneName___ViewController: ___VARIABLE_sceneName___DisplayInterface {
    
    func display___VARIABLE_resourceName___(viewModel: ___VARIABLE_sceneName___Models.Fetch___VARIABLE_resourceName___.ViewModel) {
    }
}
